<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- title -->
    <title><%= @title %></title>
    <!-- style -->
    <link rel='stylesheet' href='//cdn.jsdelivr.net/npm/hack-font@3.3.0/build/web/hack-subset.css'>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            background: #1A1D21;
            color: white;
            font-family: "Hack", monospace;
            font-size: 16px;
            margin: 0;
            padding: 0;
        }
        h1 {
            font-size: 22px;
            text-transform: uppercase;
            margin: 1rem 0;
            font-weight: bold;
            display: inline-block;
        }
        a {
            color: white;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        #nav {
            position: fixed;
            top: 0;
            background: #1A1D21;
            display: table;
            width: 100%;
            border-bottom: 1px solid #2C2F34;
        }
        .nav-item {
            display: table-cell;
            vertical-align: middle;
            padding: 0 1rem;
        }
        .icon {
            display: inline-block;
            fill: coral;
            vertical-align: middle;
        }
        .workspace {
            margin-top: 57px;
            display: table;
            background: #1F2227;
            width: 100%;
            height: 100%;
            min-height: 75vh;
            border-bottom: 1px solid #2C2F34;
        }
        .workspace div {
            display: table-cell;
            min-height: 100%;
            vertical-align: top;
        }
        .editor-wrapper {
            width: 75%;
            border-right: 1px solid #2C2F34;
        }
        textarea {
            background: #1F2227;
            color: white;
            resize: none;
            width:100%;
            height:100%;
            font-family: "Hack", monospace;
            font-size: 18px;
            padding: 1rem;
            box-sizing: border-box;
            border: 0;
            outline: none !important;
        }
        input {
            background: transparent;
            color: white;
            font-family: "Hack", monospace;
            font-size: 16px;
            border: 2px solid #2C2F34;
            padding: 0 1rem;
            /*margin: 1rem;*/
            outline: none !important;
        }
        input:focus {
            border: 2px solid coral;
        }
        select {
            background: transparent;
            color: white;
            font-family: "Hack", monospace;
            cursor: pointer;
            font-size: 16px;
            border: 2px solid transparent;
            padding: 0 1rem;
            margin: 1rem;
            outline: none !important;
            float: right;
        }
        select:hover,
        select:focus {
            border: 2px solid coral;
        }
        span.token-wrapper {
            line-height: 1.5;
        }
        span.token-value {
            color: coral;
            font-weight: bold;
        }
        table {
            border-spacing: 0;
            width: 100%;
        }
        tr.header {
            background: #2C2F34;
        }
        tr.header td {
            padding: 0.25rem 1rem;
        }
        tr td {
            font-size: 14px;
            padding: 1rem;
        }
        tbody#inputs tr:first-child td {
            padding: 0 1rem;
            padding-top: 1rem; 
        }
        tbody#inputs tr:not(:first-child) td {
            padding: 0.25rem 1rem;
        }
    </style>
</head>
<body>
    <div id="nav">
        <!--
        <span class="nav-item" style="width:200px;">
            Pascal + <i class="fa-solid fa-gem fa-2xl" style="color:coral"></i>
        </span>
        -->
        <!-- github -->
        <span class="nav-item">
            <i class="fa-brands fa-github"></i>
            <a href="https://github.com/mxsjoberg/pasrb">Github</a>
        </span>
        <!-- examples -->
        <span class="nav-item">
            <select id="select-example">
                <option value="0">Select example program</option>
                <option value="1">While loop</option>
                <option value="2">Inputs</option>
            </select>
        </span>
    </div>
    <div class="workspace">
        <!-- input -->
        <div class="editor-wrapper">
            <textarea id="editor"></textarea>
        </div>
        <!-- outputs -->
        <div>
            <table>
                <tr class="header"><td><strong>Characters</strong></td></tr>
                <tr><td><span id="characters">0</span></td></tr>

                <tr class="header"><td><strong>Tokens</strong></td></tr>
                <tr><td><span id="tokens">[]</span></td></tr>

                <tr class="header"><td><strong>AST</strong></td></tr>
                <tr><td><span id="ast">[]</span></td></tr>

                <tr class="header"><td><strong>Symbols</strong></td></tr>
                <tr><td><span id="symbols">[]</span></td></tr>

                <tr class="header"><td><strong>Identifiers</strong></td></tr>
                <tr><td><span id="identifiers">[]</span></td></tr>

                <tr class="header"><td><strong>Issues</strong></td></tr>
                <tr><td><span id="issues">[]</span></td></tr>

                <tr class="header"><td><strong>Output</strong></td></tr>
                <tr><td><span id="output"></span></td></tr>

                <!-- inputs header -->
                <tr class="header"><td><strong>Inputs</strong></td></tr>
            </table>
            <!-- inputs -->
            <table>
                <tbody id="inputs">
                    <!-- one tr per input goes here -->
                </tbody>
            </table>
        </div>
    </div>
    <div id="inputs"></div>
    <!-- update -->
    <script>
        // handle select
        document.getElementById("select-example").addEventListener("change", function() {
            // get value
            const value = document.getElementById("select-example").value;
            // set editor
            if (value == 0) { document.getElementById("editor").value = "" }
            else if (value == 1) { document.getElementById("editor").value =
`x := 0;
while x<5 {
    x := x + 1;
}
!x;`
                ;
            }
            else if (value == 2) { document.getElementById("editor").value =
`x := 0;
y := 0;

?x;
?y;

!(x + y);`
                ;
            }
            // update
            update();
        });
        // update
        function update() {
            const text = editor.value;
            // send to server
            fetch("/update", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ text }),
            }).then(response => {
                if (!response.ok) { throw new Error("something went wrong?") }
                return response.json();
            }).then(data => {
                // inputs
                document.getElementById("inputs").innerHTML = "";
                try {
                    console.log(Object.entries(JSON.parse(data.input)));
                    Object.entries(JSON.parse(data.input)).forEach(identifier => {
                        if (identifier[1] == null) { identifier[1] = "" }
                        // append input to inputs
                        document.getElementById("inputs").innerHTML += `<tr><td><span class='token-value'>${identifier[0]}</span></td><td><input id="input-${identifier[0]}" placeholder='' value='${identifier[1]}'></input></td></tr>`;
                    });
                } catch {
                    console.log("no inputs");
                    document.getElementById("inputs").innerHTML = "";
                }
                // characters
                document.getElementById("characters").innerHTML = data.characters;
                // tokens
                document.getElementById("tokens").innerHTML = "";
                JSON.parse(data.tokens).forEach(token => {
                    document.getElementById("tokens").innerHTML = document.getElementById("tokens").innerHTML + `<span class='token-wrapper'><span class='token-value'>${token.value}</span> ${token.type}</span>, `;
                });
                // ast
                document.getElementById("ast").innerHTML = data.ast;
                // document.getElementById("ast").innerHTML = "<br>" + formatTree(data.ast);
                // symbols
                document.getElementById("symbols").innerHTML = "";
                Object.entries(JSON.parse(data.symbols)).forEach((symbol) => {
                    document.getElementById("symbols").innerHTML = document.getElementById("symbols").innerHTML + `<span class='token-wrapper'><span class='token-value'>${symbol[0]}</span> : ${symbol[1]}</span>, `;
                });
                // identifiers
                document.getElementById("identifiers").innerHTML = "";
                JSON.parse(data.identifiers).forEach(identifier => {
                    document.getElementById("identifiers").innerHTML = document.getElementById("identifiers").innerHTML + `<span class='token-wrapper'><span class='token-value'>${identifier}</span></span>, `;
                });
                // issues
                // document.getElementById("issues").innerHTML = data.issues;
                document.getElementById("issues").innerHTML = "";
                JSON.parse(data.issues).forEach(issue => {
                    if (issue.pos == null) { issue.pos = "*" }
                    document.getElementById("issues").innerHTML = document.getElementById("issues").innerHTML + `line#<span class='token-wrapper'><span style='font-weight:bold;'>${issue.pos}</span> : ${issue.issue}</span><br>`;
                });
                // output
                document.getElementById("output").innerHTML = data.output;
            }).then(() => {
                // event listeners on inputs
                document.querySelectorAll("input").forEach(input => {
                    input.addEventListener("input", event => {
                        const identifier = input.id.split("-")[1];
                        const text = input.value;
                        // send to server
                        fetch("/input", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({ identifier, text }),
                        }).then(response => {
                            if (!response.ok) {
                                throw new Error("something went wrong?")
                            }
                            return response.json();
                        }).then(data => {
                            // symbols
                            document.getElementById("symbols").innerHTML = "";
                            Object.entries(JSON.parse(data.symbols)).forEach((symbol) => {
                                document.getElementById("symbols").innerHTML = document.getElementById("symbols").innerHTML + `<span class='token-wrapper'><span class='token-value'>${symbol[0]}</span> : ${symbol[1]}</span>, `;
                            });
                            // output
                            document.getElementById("output").innerHTML = data.output;
                        }).catch(error => { console.error(error) });
                    });
                });
            }).catch(error => { console.error(error) });
        };
        // editor
        const editor = document.getElementById("editor");
        editor.addEventListener("input", function() { update() });
        // capture tab in textarea https://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea
        document.getElementById('editor').addEventListener('keydown', function(e) {
            if (e.key == 'Tab') {
                e.preventDefault();
                var start = this.selectionStart;
                var end = this.selectionEnd;
                // set textarea value to text before caret + tab + text after caret
                this.value = this.value.substring(0, start) + "\t" + this.value.substring(end);
                // put caret at right position again
                this.selectionStart = this.selectionEnd = start + 1;
            }
        });
        // function to pretty print ast
        // function formatTree(input, indentLevel = 0) {
        //     const indent = "<span style='min-width:20px;display:inline-block;'></span>".repeat(indentLevel);
        //     let result = '';
        //     let currentIndex = 0;
        //     while (currentIndex < input.length) {
        //         const char = input[currentIndex];
        //         if (char === '[') {
        //             result += `${indent}${char}<br>`;
        //             indentLevel++;
        //             result += "<span style='min-width:20px;display:inline-block;'></span>".repeat(indentLevel);
        //         } else if (char === ']') {
        //             indentLevel--;
        //             result += `<br>${"<span style='min-width:20px;display:inline-block;'></span>".repeat(indentLevel)}${char}`;
        //         } else if (char === ',') {
        //             result += ',<br>';
        //             result += "<span style='min-width:20px;display:inline-block;'></span>".repeat(indentLevel);
        //         } else if (char === ' ' || char === '\n' || char === '\t') {
        //             // pass
        //         } else {
        //             result += char;
        //         }
        //         currentIndex++;
        //     }
        //     return result;
        // }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.js" integrity="sha512-8RnEqURPUc5aqFEN04aQEiPlSAdE0jlFS/9iGgUyNtwFnSKCXhmB6ZTNl7LnDtDWKabJIASzXrzD0K+LYexU9g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>
</html>